{
    "network_comment": [
        "either:",
        "mainnet",
        "preprod",
        "preview"
    ],
    "network": "preprod",

    "envFolderPath_comment": [
        "folder that will be used by the various sub commands to generate files"
    ],
    "envFolderPath": "./local/testnet",

    "signer_comment": [
        "the 'signer' is the account that will be used to deploy the contracts",
        "(hence one of their utxos will be used as parameter to mint the fee oracle nft identifyer)",

        "the keys files are expected in the `cardano-cli` format",

        "only the skey is required but is suggested that all fields are specified",

        "if the address is not specified the private key will be used to generate the address with _only payment credentials_",
        "if the account you intend to use has also staking part it is required to specify the full address"
    ],
    "signer": {
        "skeyPath": "./local/testnet/marketplace_deploy.skey",
        "vkeyPath": null,
        "address": null 
    },

    "ownerAddress_comment": [
        "'ownerAddress' specifies the address of the user that:",
        " - will be able to update the fee that the marketplace takes",
        " - will receive the fee"
    ],
    "ownerAddress": "your_address_here",

    "paymentAsset": {

        "policy_comment": [
            "'paymentAssetPolicy' is the policy of the asset that will be used for payments",
    
            "it is meant to be an hexadecimal string of length 56 (28 * 2)",
            "in case the payment asset is meant to be ADA then the empty string must be specified",
    
            "(empty string example below)",
            ""
        ],
        "policy": "",
    
        "tokenNameHex_comment": [
            "'tokenNameHex' is the name of the asset that will be used for payments",
            
            "it is meant to be an hexadecimal string of length betwee 0 and 64 (32 * 2)",
            
            "in case you are not sure what is the hex form of your token name",
            "you can run the following command (replacing 'your_token_name' with your token name)",
            "that will print the value you should use for that token name:",
    
            "npm run tokenNameToHex your_token_name",
    
            "in case the payment asset is meant to be ADA then the empty string must be specified",
            "(empty string example below)",
            ""
    
        ],
        "tokenNameHex": ""
    },

    "feeNumerator_comment": [
        "'feeNumerator' specifies the initial fee with which the `feeOracle` contract is deployed",
        "it must be a positive integer included between 0 and 1_000_000",
        "where 0 implies no fees are collected (0% fees) and 1_000_000 implies 100% of the sale amount goes to the 'ownerAddress' (100% fee)",

        "example:",
        "a fee of 25_000 (default) implies",
        "25_000 / 1_000_000 = 0.025",
        " which translates to a fee of 2.5%",
        
        "a quick way to calculate your 'feeNumerator` is to multiply the percentage by 10_000",
        "example:",
        "I want a fee of 2.5% so I do",
        "2.5 * 10_000 = 25_000"
    ],
    "feeNumerator": 25000,

    "blockfrostProjectId_comment": [
        "'blockfrostProjectId' is the API key for blockfrost;",
        "if specified blockfrost will be used for queries and tx submission",
        "otherwhise leave anything that is not a string will default to koios"
    ],
    "blockfrostProjectId": null
}
